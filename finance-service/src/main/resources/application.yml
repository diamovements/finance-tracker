spring:
  flyway:
    url: "${POSTGRES_URL}"
    user: "${POSTGRES_USERNAME}"
    password: "${POSTGRES_PASSWORD}"
    enabled: true
    baseline-on-migrate: true
    baseline-version: '0'
    locations: classpath:db/migration
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: "${POSTGRES_URL}"
    username: "${POSTGRES_USERNAME}"
    password: "${POSTGRES_PASSWORD}"
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

user-service:
  url: "http://user-service:8081/api/v1/user"

server:
  port: 8082

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000

quotes:
  api-key: "${QUOTES_API_KEY}"

logging:
  level:
    root: info

springdoc:
  enable-data-rest: false
  swagger-ui:
    url: "/openapi.yml"
