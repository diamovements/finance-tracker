openapi: 3.0.3
info:
  title: Finance Service API
  version: 1.0.0
  description: API для отслеживания личных финансов

tags:
  - name: Authentication
    description: Управление входом и регистрацией
  - name: Categories
    description: Управление категориями
  - name: Limits
    description: Управление лимитами
  - name: Payments
    description: Управление повторяющимися платежами
  - name: Transactions
    description: Управление транзакциями
  - name: Goals
    description: Управление целями
  - name: Account
    description: Управление аккаунтом

servers:
  - url: /api/v1
    description: Base URL

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя в системе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'

  /auth/signin:
    post:
      tags:
        - Authentication
      summary: Вход пользователя
      description: Выполняет вход пользователя в систему
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '403':
          description: Неправильный логин или пароль

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Обновление токена
      description: Обновляет токен доступа с использованием рефреш-токена
      parameters:
        - in: header
          name: refreshToken
          required: true
          schema:
            type: string
          description: Рефреш-токен пользователя
      responses:
        '200':
          description: Новый токен доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '403':
          description: Нет доступа

  /auth/reset-password-request:
    post:
      tags:
        - Authentication
      summary: Запрос на сброс пароля
      description: Отправляет запрос на сброс пароля по email
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "user@example.com"
      responses:
        '200':
          description: Запрос принят
        '403':
          description: Нет доступа

  /auth/reset-password-confirm:
    post:
      tags:
        - Authentication
      summary: Подтверждение сброса пароля
      description: Подтверждает сброс пароля, используя код и новый пароль.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Пароль успешно сброшен
        '403':
          description: Нет доступа

  /categories/all:
    get:
      tags:
        - Categories
      summary: Получить список всех категорий пользователя
      operationId: getAllCategories
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      responses:
        '200':
          description: Список всех категорий пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '401':
          description: Пользователь не авторизован

  /categories/add:
    post:
      tags:
        - Categories
      summary: Добавить пользовательскую категорию
      operationId: addCustomCategory
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCategoryRequest'
      responses:
        '200':
          description: Категория добавлена
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован

  /categories/{name}:
    get:
      tags:
        - Categories
      summary: Получить категорию по имени
      operationId: getCategoryByName
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Название категории
          schema:
            type: string
      responses:
        '200':
          description: Найденная категория
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Категория не найдена

  /limits/all:
    get:
      tags:
        - Limits
      summary: Получить лимиты пользователя
      operationId: getLimits
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя.
          schema:
            type: string
      responses:
        '200':
          description: Список лимитов пользователя.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Limit'
        '401':
          description: Пользователь не авторизован.

  /limits/add:
    post:
      tags:
        - Limits
      summary: Добавить новый лимит
      operationId: addLimit
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLimitRequest'
      responses:
        '200':
          description: Лимит добавлен
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован

  /limits/delete:
    delete:
      tags:
        - Limits
      summary: Удалить лимит пользователя
      operationId: deleteLimit
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLimitRequest'
      responses:
        '200':
          description: Лимит удалён
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Лимит не найден
        '401':
          description: Пользователь не авторизован

  /saving-goals/all:
    get:
      tags:
        - Goals
      summary: Получить накопительную цель пользователя
      operationId: getAllGoals
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      responses:
        '200':
          description: Список целей для накопления
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavingGoal'
        '401':
          description: Пользователь не авторизован

  /saving-goals/add:
    post:
      tags:
        - Goals
      summary: Добавить цель для накопления
      operationId: addGoal
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGoalRequest'
      responses:
        '200':
          description: Цель добавлена
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован

  /saving-goals/delete:
    delete:
      tags:
        - Goals
      summary: Удалить цель для накопления
      operationId: deleteGoal
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      responses:
        '200':
          description: Цель удалена
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован
        '404':
          description: Цель не найдена

  /account:
    get:
      tags:
        - Account
      summary: Получить информацию об аккаунте
      operationId: getCurrentData
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя.
          schema:
            type: string
      responses:
        '200':
          description: Информация об аккаунте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDataResponse'
        '401':
          description: Пользователь не авторизован
  /account/balance:
    post:
      tags:
        - Account
      summary: Обновить баланс пользователя
      operationId: updateBalance
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceRequest'
      responses:
        '200':
          description: Баланс обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDataResponse'
        '401':
          description: Пользователь не авторизован

  /recurring-payments/all:
    get:
      tags:
        - Payments
      summary: Получить все повторяющиеся платежи пользователя
      operationId: getAllPayments
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      responses:
        '200':
          description: Список повторяющихся платежей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecurringPayment'
        '401':
          description: Пользователь не авторизован

  /recurring-payments/add:
    post:
      tags:
        - Payments
      summary: Добавить повторяющийся платеж
      operationId: addPayment
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentRequest'
      responses:
        '200':
          description: Повторяющийся платеж добавлен
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован

  /recurring-payments/delete/{name}:
    delete:
      tags:
        - Payments
      summary: Удалить повторяющийся платеж
      operationId: deletePayment
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Название платежа
          schema:
            type: string
      responses:
        '200':
          description: Повторяющийся платеж удален
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован
        '404':
          description: Платеж не найден

  /transactions/all:
    get:
      tags:
        - Transactions
      summary: Получить список всех транзакций пользователя
      operationId: getAllTransactions
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Номер страницы (начинается с 0).
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          description: Размер страницы.
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список транзакций пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        '401':
          description: Пользователь не авторизован

  /transactions/add:
    post:
      tags:
        - Transactions
      summary: Добавить транзакцию
      operationId: addTransaction
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTransactionRequest'
      responses:
        '200':
          description: Транзакция успешно добавлена.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Превышен лимит при добавлении транзакции
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Пользователь не авторизован

  /total-expense:
    get:
      tags:
        - Transactions
      summary: Посчитать общую сумму расходов пользователя
      operationId: calculateTotalExpense
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      responses:
        '200':
          description: Общая сумма расходов
          content:
            application/json:
              schema:
                type: string
                format: decimal
        '401':
          description: Пользователь не авторизован

  /total-income:
    get:
      tags:
        - Transactions
      summary: Посчитать общую сумму доходов пользователя
      operationId: calculateTotalIncome
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Токен авторизации пользователя
          schema:
            type: string
      responses:
        '200':
          description: Общая сумма доходов
          content:
            application/json:
              schema:
                type: string
                format: decimal
        '401':
          description: Пользователь не авторизован


components:
  schemas:

    AddCategoryRequest:
      type: object
      properties:
        name:
          type: string
          description: Название категории

    Category:
      type: object
      properties:
        categoryId:
          type: string
          format: uuid
          description: Идентификатор категории
        name:
          type: string
          description: Название категории
        standard:
          type: boolean
          description: Стандартная категория или нет
        userId:
          type: string
          format: uuid
          description: Идентификатор пользователя

    Limit:
      type: object
      properties:
        limitId:
          type: string
          format: uuid
          description: Идентификатор лимита
        userId:
          type: string
          format: uuid
          description: Идентификатор пользователя
        maxExpenseLimit:
          type: string
          format: decimal
          description: Максимальный лимит расходов
        frequency:
          type: string
          enum: [DAILY, WEEKLY, MONTHLY]
          description: Периодичность лимита

    AddLimitRequest:
      type: object
      properties:
        maxExpenseLimit:
          type: string
          format: decimal
          description: Максимальный лимит расходов
        frequency:
          type: string
          enum: [DAILY, WEEKLY, MONTHLY]
          description: Периодичность лимита

    DeleteLimitRequest:
      type: object
      properties:
        frequency:
          type: string
          enum: [DAILY, WEEKLY, MONTHLY]
          description: Периодичность лимита

    SavingGoal:
      type: object
      properties:
        goalId:
          type: string
          format: uuid
          description: Идентификатор цели
        userId:
          type: string
          format: uuid
          description: Идентификатор пользователя
        goalAmount:
          type: string
          format: decimal
          description: Сумма цели
        endDate:
          type: string
          format: date
          description: Дата завершения цели

    AddGoalRequest:
      type: object
      properties:
        goalAmount:
          type: string
          format: decimal
          description: Сумма цели
        endDate:
          type: string
          format: date
          description: Дата завершения цели

    AccountDataResponse:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
        surname:
          type: string
          description: Фамилия пользователя
        expenses:
          type: string
          format: decimal
          description: Общая сумма расходов
        incomes:
          type: string
          format: decimal
          description: Общая сумма доходов
        balance:
          type: string
          format: decimal
          description: Текущий баланс пользователя
        limit:
          type: string
          format: decimal
          description: Текущий лимит пользователя

    BalanceRequest:
      type: object
      properties:
        balance:
          type: string
          format: decimal
          description: Новый баланс пользователя

    RecurringPayment:
      type: object
      properties:
        paymentId:
          type: string
          format: uuid
          description: Идентификатор платежа
        userId:
          type: string
          format: uuid
          description: Идентификатор пользователя
        name:
          type: string
          description: Название повторяющегося платежа
        amount:
          type: string
          format: decimal
          description: Сумма платежа
        startDate:
          type: string
          format: date
          description: Дата начала платежа
        nextPaymentDate:
          type: string
          format: date
          description: Дата следующего платежа
        frequency:
          type: string
          enum: [DAILY, WEEKLY, MONTHLY]
          description: Периодичность платежа

    AddPaymentRequest:
      type: object
      properties:
        name:
          type: string
          description: Название повторяющегося платежа
        amount:
          type: string
          format: decimal
          description: Сумма платежа
        startDate:
          type: string
          format: date
          description: Дата начала платежа
        frequency:
          type: string
          enum: [DAILY, WEEKLY, MONTHLY]
          description: Периодичность платежа

    TransactionResponse:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          description: Сумма транзакции
        category:
          type: string
          description: Категория транзакции
        transactionType:
          type: string
          enum: [INCOME, EXPENSE]
          description: Тип транзакции
        description:
          type: string
          description: Описание транзакции

    AddTransactionRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          description: Сумма транзакции
        category:
          type: string
          description: Категория транзакции
        transactionType:
          type: string
          enum: [ INCOME, EXPENSE ]
          description: Тип транзакции
        description:
          type: string
          description: Описание транзакции

    SignUpRequest:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
        surname:
          type: string
          description: Фамилия пользователя
        email:
          type: string
          description: Email пользователя
        password:
          type: string
          description: Пароль пользователя
      required:
        - name
        - surname
        - email
        - password

    SignInRequest:
      type: object
      properties:
        email:
          type: string
          description: Email пользователя
        password:
          type: string
          description: Пароль пользователя
      required:
        - email
        - password

    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          description: Email пользователя
        code:
          type: string
          description: Код подтверждения для сброса пароля
        newPassword:
          type: string
          description: Новый пароль пользователя
      required:
        - email
        - code
        - newPassword

    AuthenticationResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: Токен доступа
        refreshToken:
          type: string
          description: Рефреш-токен
      required:
        - accessToken
        - refreshToken









